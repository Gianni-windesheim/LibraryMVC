// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoftwareDevelopment2.Data;

#nullable disable

namespace SoftwareDevelopment2.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230616170326_AuthorAndLocationSeeding")]
    partial class AuthorAndLocationSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "eaadc6c2-3a90-4a27-b16c-db6a231f1a7a",
                            Email = "Kristina.Durgan@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "df5c3df5d6e68e9f2755c84c80308b0fe2fe6395",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6423f946-2a9e-4016-8894-1b039b82de8c",
                            TwoFactorEnabled = false,
                            UserName = "Kristina.Durgan@gmail.com"
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "510d6df4-7706-4798-9e96-415915903a62",
                            Email = "Gerardo61@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "1ac30d60ebe7dac8b45e1af20d0f4e104791c814",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bce57c8d-260d-4696-b8b4-ec59559b01a6",
                            TwoFactorEnabled = false,
                            UserName = "Gerardo61@gmail.com"
                        },
                        new
                        {
                            Id = "3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "04069bc6-eaa8-40ae-ae32-afb925ff3b60",
                            Email = "Ebony52@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "c4d668b374690e2591da9a73ce091901124fd188",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f4ecfb55-3d71-4766-9521-fced2f955c31",
                            TwoFactorEnabled = false,
                            UserName = "Ebony52@hotmail.com"
                        },
                        new
                        {
                            Id = "4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "831a4bc9-2e61-49cc-a69d-5920b8f0d750",
                            Email = "Kim27@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "42f7a95c9f7109470ecd1f751735514985b50267",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "784c9fb1-ef15-4dd7-8f1e-55dec5ab66de",
                            TwoFactorEnabled = false,
                            UserName = "Kim27@gmail.com"
                        },
                        new
                        {
                            Id = "5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6b650e51-ad5f-47a9-8026-1a5c5e5cdc7c",
                            Email = "Agnes.Yundt@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "f9917e952a00f2ec6e3d62e3d1bad3aec85ae80d",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "99f7014e-4302-4179-b135-3ba33191a810",
                            TwoFactorEnabled = false,
                            UserName = "Agnes.Yundt@hotmail.com"
                        },
                        new
                        {
                            Id = "6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "604c41b2-011b-411b-a683-b23d0aee2d92",
                            Email = "Claude86@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "b384869f37a1ada40a74f3c140c0737be608a76a",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a984ebfc-cb18-4d67-864c-0e63b24599f2",
                            TwoFactorEnabled = false,
                            UserName = "Claude86@hotmail.com"
                        },
                        new
                        {
                            Id = "7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b4780a5c-5078-49f9-b46e-aa2338c78206",
                            Email = "Christina0@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "b7679efee3322d4145be4ebe08c4573b44919cdc",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a47a4084-f240-4612-8bc6-96e854f3bacd",
                            TwoFactorEnabled = false,
                            UserName = "Christina0@gmail.com"
                        },
                        new
                        {
                            Id = "8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4f33be62-7738-4a19-9830-c11e847d6365",
                            Email = "Opal.Corkery@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "dfcd949c731b0f1378cbc32c8d4dff74c0cda66e",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "712fc50a-c654-4c36-a52a-668d9ba0dcbf",
                            TwoFactorEnabled = false,
                            UserName = "Opal.Corkery@hotmail.com"
                        },
                        new
                        {
                            Id = "9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bc96eb5e-fea9-4f14-9d05-6fc0f9c6dbca",
                            Email = "Christy.OHara@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "00b95a1f2619de325e8f18e4357fc88f06c442ce",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b666cd2d-ebdd-4ab8-be0f-5cada7d4dc2c",
                            TwoFactorEnabled = false,
                            UserName = "Christy.OHara@gmail.com"
                        },
                        new
                        {
                            Id = "10",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8782fb79-affb-43a1-8bfb-a5e93e10447c",
                            Email = "Tamara32@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "60009f9dd09ae790d716ab2ee3eca6b0f178654a",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "88b75199-45fe-46ea-82e0-feb85fc0ab29",
                            TwoFactorEnabled = false,
                            UserName = "Tamara32@gmail.com"
                        },
                        new
                        {
                            Id = "11",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3b0bbb63-1f78-46c8-aa9d-085099091b5a",
                            Email = "Wayne.Leffler28@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "efc21f7576f96fd0fdecfb0b0a0e94ca1a0c5356",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "aafa77bb-5ae8-4c51-8e3e-507600ad5329",
                            TwoFactorEnabled = false,
                            UserName = "Wayne.Leffler28@yahoo.com"
                        },
                        new
                        {
                            Id = "12",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b928d289-1d05-416d-9bc5-7404791803b6",
                            Email = "Wendell.Wyman@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "5a2bfc30a997a95b0f942cd288f74b4585806c59",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "61040821-b596-4eaa-8f57-1e3f52f83409",
                            TwoFactorEnabled = false,
                            UserName = "Wendell.Wyman@gmail.com"
                        },
                        new
                        {
                            Id = "13",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "83334451-d33c-40f7-8045-ce9428595249",
                            Email = "Leticia_Schinner95@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "3f0ace7cedfc73a7a7ae2df48622e67d7d542255",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4cbe7637-61fd-44e6-94f6-8fe5356339dd",
                            TwoFactorEnabled = false,
                            UserName = "Leticia_Schinner95@yahoo.com"
                        },
                        new
                        {
                            Id = "14",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3b541d52-71f2-4b23-ba41-a843f70b9c1d",
                            Email = "Pearl.Kovacek39@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "80e6803c80d09429a0ab0587e7e9d2d7ac095252",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a3d38023-c518-45ec-bb57-b6aa9082ca75",
                            TwoFactorEnabled = false,
                            UserName = "Pearl.Kovacek39@hotmail.com"
                        },
                        new
                        {
                            Id = "15",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c514aa6a-da22-457d-be4c-11ee3cc7cded",
                            Email = "Minnie_Macejkovic91@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "bf7ea2839bf7d869a21c74b8885bf1b1f6549137",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "73c341e2-02b1-4c97-a182-ede6d12722a7",
                            TwoFactorEnabled = false,
                            UserName = "Minnie_Macejkovic91@gmail.com"
                        },
                        new
                        {
                            Id = "16",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "61cb003d-c08b-46ca-8c10-1a5ec1d9cf5c",
                            Email = "Amos.Ward@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "7f7655c3b37a412265cc863e6be7a9a35ab755ea",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "64c108d9-aaee-4d83-a9a5-4a6447876788",
                            TwoFactorEnabled = false,
                            UserName = "Amos.Ward@yahoo.com"
                        },
                        new
                        {
                            Id = "17",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bb9d9564-e28c-42d0-9652-1cbf942a773a",
                            Email = "Isaac.Dibbert@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "067a8d69033f52738cf7029fc5a60db6aee17156",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9f98cadb-ecfc-4f2e-bce6-4e9b3a84a842",
                            TwoFactorEnabled = false,
                            UserName = "Isaac.Dibbert@gmail.com"
                        },
                        new
                        {
                            Id = "18",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6da2b5f2-1d23-49a4-a61e-cb4e84b4c680",
                            Email = "Teresa_OReilly@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "3050fbca165a079885ad1b4428cfd0070fbfbdea",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "42752e60-1870-47fc-8ec4-7ddae1fd78b6",
                            TwoFactorEnabled = false,
                            UserName = "Teresa_OReilly@hotmail.com"
                        },
                        new
                        {
                            Id = "19",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bbb43f8b-0cf1-47bf-afb0-fed5e283b297",
                            Email = "Lonnie3@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "167de33986cd59082ff7183df5fc8bc8e1185476",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d958dbaf-24e0-4b33-9974-27b32222259c",
                            TwoFactorEnabled = false,
                            UserName = "Lonnie3@yahoo.com"
                        },
                        new
                        {
                            Id = "20",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "13953dc6-2ecf-47e9-afd2-89c0206f2304",
                            Email = "Wendy78@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "99905911f3f4e5ccb08bc65db1856f2e48067eab",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c887101c-8ba0-48e0-a4da-ce8cac3b9614",
                            TwoFactorEnabled = false,
                            UserName = "Wendy78@gmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SoftwareDevelopment2.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 50,
                            Name = "Vickie O'Connell"
                        },
                        new
                        {
                            Id = 2,
                            Age = 50,
                            Name = "Lula Emard"
                        },
                        new
                        {
                            Id = 3,
                            Age = 50,
                            Name = "Ben Friesen"
                        },
                        new
                        {
                            Id = 4,
                            Age = 50,
                            Name = "Patty Gulgowski"
                        },
                        new
                        {
                            Id = 5,
                            Age = 50,
                            Name = "Preston Strosin"
                        },
                        new
                        {
                            Id = 6,
                            Age = 50,
                            Name = "Marcos Steuber"
                        },
                        new
                        {
                            Id = 7,
                            Age = 50,
                            Name = "Homer Kilback"
                        },
                        new
                        {
                            Id = 8,
                            Age = 50,
                            Name = "Lance Jenkins"
                        },
                        new
                        {
                            Id = 9,
                            Age = 50,
                            Name = "Victoria Maggio"
                        },
                        new
                        {
                            Id = 10,
                            Age = 50,
                            Name = "Julia Hermann"
                        },
                        new
                        {
                            Id = 11,
                            Age = 50,
                            Name = "Erma Haley"
                        },
                        new
                        {
                            Id = 12,
                            Age = 50,
                            Name = "Darrel Kub"
                        },
                        new
                        {
                            Id = 13,
                            Age = 50,
                            Name = "Santiago O'Hara"
                        },
                        new
                        {
                            Id = 14,
                            Age = 50,
                            Name = "Dominic Stark"
                        },
                        new
                        {
                            Id = 15,
                            Age = 50,
                            Name = "Pat Rippin"
                        },
                        new
                        {
                            Id = 16,
                            Age = 50,
                            Name = "Barry Bosco"
                        },
                        new
                        {
                            Id = 17,
                            Age = 50,
                            Name = "Bill Walker"
                        },
                        new
                        {
                            Id = 18,
                            Age = 50,
                            Name = "Jonathon Rempel"
                        },
                        new
                        {
                            Id = 19,
                            Age = 50,
                            Name = "Robyn Kunde"
                        },
                        new
                        {
                            Id = 20,
                            Age = 50,
                            Name = "Pat Fisher"
                        });
                });

            modelBuilder.Entity("SoftwareDevelopment2.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearOfRelease")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            LocationId = 1,
                            Title = "Harry Potter: 1",
                            YearOfRelease = 1998
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            LocationId = 2,
                            Title = "Harry Potter: 2",
                            YearOfRelease = 1999
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            LocationId = 3,
                            Title = "Harry Potter: 3",
                            YearOfRelease = 2000
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            LocationId = 4,
                            Title = "Harry Potter: 4",
                            YearOfRelease = 2001
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 5,
                            LocationId = 5,
                            Title = "Harry Potter: 5",
                            YearOfRelease = 2002
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 6,
                            LocationId = 6,
                            Title = "Harry Potter: 6",
                            YearOfRelease = 2003
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 7,
                            LocationId = 7,
                            Title = "Harry Potter: 7",
                            YearOfRelease = 2004
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 8,
                            LocationId = 8,
                            Title = "Harry Potter: 8",
                            YearOfRelease = 2005
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 9,
                            LocationId = 9,
                            Title = "Harry Potter: 9",
                            YearOfRelease = 2006
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 10,
                            LocationId = 10,
                            Title = "Harry Potter: 10",
                            YearOfRelease = 2007
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 11,
                            LocationId = 11,
                            Title = "Harry Potter: 11",
                            YearOfRelease = 2008
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 12,
                            LocationId = 12,
                            Title = "Harry Potter: 12",
                            YearOfRelease = 2009
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 13,
                            LocationId = 13,
                            Title = "Harry Potter: 13",
                            YearOfRelease = 2010
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 14,
                            LocationId = 14,
                            Title = "Harry Potter: 14",
                            YearOfRelease = 2011
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 15,
                            LocationId = 15,
                            Title = "Harry Potter: 15",
                            YearOfRelease = 2012
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 16,
                            LocationId = 16,
                            Title = "Harry Potter: 16",
                            YearOfRelease = 2013
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 17,
                            LocationId = 17,
                            Title = "Harry Potter: 17",
                            YearOfRelease = 2014
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 18,
                            LocationId = 18,
                            Title = "Harry Potter: 18",
                            YearOfRelease = 2015
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 19,
                            LocationId = 19,
                            Title = "Harry Potter: 19",
                            YearOfRelease = 2016
                        });
                });

            modelBuilder.Entity("SoftwareDevelopment2.Models.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2023, 7, 7, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9410),
                            ItemId = 1,
                            StartDate = new DateTime(2023, 6, 16, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9347),
                            UserId = "1"
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2023, 7, 7, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9458),
                            ItemId = 2,
                            StartDate = new DateTime(2023, 6, 16, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9457),
                            UserId = "2"
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2023, 7, 7, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9482),
                            ItemId = 3,
                            StartDate = new DateTime(2023, 6, 16, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9481),
                            UserId = "3"
                        },
                        new
                        {
                            Id = 4,
                            EndDate = new DateTime(2023, 7, 7, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9549),
                            ItemId = 4,
                            StartDate = new DateTime(2023, 6, 16, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9547),
                            UserId = "4"
                        },
                        new
                        {
                            Id = 5,
                            EndDate = new DateTime(2023, 7, 7, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9572),
                            ItemId = 5,
                            StartDate = new DateTime(2023, 6, 16, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9571),
                            UserId = "5"
                        },
                        new
                        {
                            Id = 6,
                            EndDate = new DateTime(2023, 7, 7, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9596),
                            ItemId = 6,
                            StartDate = new DateTime(2023, 6, 16, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9595),
                            UserId = "6"
                        },
                        new
                        {
                            Id = 7,
                            EndDate = new DateTime(2023, 7, 7, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9618),
                            ItemId = 7,
                            StartDate = new DateTime(2023, 6, 16, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9616),
                            UserId = "7"
                        },
                        new
                        {
                            Id = 8,
                            EndDate = new DateTime(2023, 7, 7, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9637),
                            ItemId = 8,
                            StartDate = new DateTime(2023, 6, 16, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9636),
                            UserId = "8"
                        },
                        new
                        {
                            Id = 9,
                            EndDate = new DateTime(2023, 7, 7, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9660),
                            ItemId = 9,
                            StartDate = new DateTime(2023, 6, 16, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9659),
                            UserId = "9"
                        },
                        new
                        {
                            Id = 10,
                            EndDate = new DateTime(2023, 7, 7, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9708),
                            ItemId = 10,
                            StartDate = new DateTime(2023, 6, 16, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9707),
                            UserId = "10"
                        },
                        new
                        {
                            Id = 11,
                            EndDate = new DateTime(2023, 7, 7, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9730),
                            ItemId = 11,
                            StartDate = new DateTime(2023, 6, 16, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9729),
                            UserId = "11"
                        },
                        new
                        {
                            Id = 12,
                            EndDate = new DateTime(2023, 7, 7, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9751),
                            ItemId = 12,
                            StartDate = new DateTime(2023, 6, 16, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9750),
                            UserId = "12"
                        },
                        new
                        {
                            Id = 13,
                            EndDate = new DateTime(2023, 7, 7, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9772),
                            ItemId = 13,
                            StartDate = new DateTime(2023, 6, 16, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9771),
                            UserId = "13"
                        },
                        new
                        {
                            Id = 14,
                            EndDate = new DateTime(2023, 7, 7, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9793),
                            ItemId = 14,
                            StartDate = new DateTime(2023, 6, 16, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9792),
                            UserId = "14"
                        },
                        new
                        {
                            Id = 15,
                            EndDate = new DateTime(2023, 7, 7, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9857),
                            ItemId = 15,
                            StartDate = new DateTime(2023, 6, 16, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9856),
                            UserId = "15"
                        },
                        new
                        {
                            Id = 16,
                            EndDate = new DateTime(2023, 7, 7, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9890),
                            ItemId = 16,
                            StartDate = new DateTime(2023, 6, 16, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9889),
                            UserId = "16"
                        },
                        new
                        {
                            Id = 17,
                            EndDate = new DateTime(2023, 7, 7, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9938),
                            ItemId = 17,
                            StartDate = new DateTime(2023, 6, 16, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9937),
                            UserId = "17"
                        },
                        new
                        {
                            Id = 18,
                            EndDate = new DateTime(2023, 7, 7, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9964),
                            ItemId = 18,
                            StartDate = new DateTime(2023, 6, 16, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9963),
                            UserId = "18"
                        },
                        new
                        {
                            Id = 19,
                            EndDate = new DateTime(2023, 7, 7, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9985),
                            ItemId = 19,
                            StartDate = new DateTime(2023, 6, 16, 19, 3, 26, 26, DateTimeKind.Local).AddTicks(9984),
                            UserId = "19"
                        });
                });

            modelBuilder.Entity("SoftwareDevelopment2.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Verdieping 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Verdieping 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Verdieping 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Verdieping 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Verdieping 5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Verdieping 6"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Verdieping 7"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Verdieping 8"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Verdieping 9"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Verdieping 10"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Verdieping 11"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Verdieping 12"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Verdieping 13"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Verdieping 14"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Verdieping 15"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Verdieping 16"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Verdieping 17"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Verdieping 18"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Verdieping 19"
                        });
                });

            modelBuilder.Entity("SoftwareDevelopment2.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 1,
                            UserId = "1"
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 2,
                            UserId = "2"
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 3,
                            UserId = "3"
                        },
                        new
                        {
                            Id = 4,
                            ItemId = 4,
                            UserId = "4"
                        },
                        new
                        {
                            Id = 5,
                            ItemId = 5,
                            UserId = "5"
                        },
                        new
                        {
                            Id = 6,
                            ItemId = 6,
                            UserId = "6"
                        },
                        new
                        {
                            Id = 7,
                            ItemId = 7,
                            UserId = "7"
                        },
                        new
                        {
                            Id = 8,
                            ItemId = 8,
                            UserId = "8"
                        },
                        new
                        {
                            Id = 9,
                            ItemId = 9,
                            UserId = "9"
                        },
                        new
                        {
                            Id = 10,
                            ItemId = 10,
                            UserId = "10"
                        },
                        new
                        {
                            Id = 11,
                            ItemId = 11,
                            UserId = "11"
                        },
                        new
                        {
                            Id = 12,
                            ItemId = 12,
                            UserId = "12"
                        },
                        new
                        {
                            Id = 13,
                            ItemId = 13,
                            UserId = "13"
                        },
                        new
                        {
                            Id = 14,
                            ItemId = 14,
                            UserId = "14"
                        },
                        new
                        {
                            Id = 15,
                            ItemId = 15,
                            UserId = "15"
                        },
                        new
                        {
                            Id = 16,
                            ItemId = 16,
                            UserId = "16"
                        },
                        new
                        {
                            Id = 17,
                            ItemId = 17,
                            UserId = "17"
                        },
                        new
                        {
                            Id = 18,
                            ItemId = 18,
                            UserId = "18"
                        },
                        new
                        {
                            Id = 19,
                            ItemId = 19,
                            UserId = "19"
                        });
                });

            modelBuilder.Entity("SoftwareDevelopment2.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgeGroup")
                        .HasColumnType("int");

                    b.Property<float>("CostPerMonth")
                        .HasColumnType("real");

                    b.Property<int>("ExtendsInARow")
                        .HasColumnType("int");

                    b.Property<float>("FinePerItemPerDay")
                        .HasColumnType("real");

                    b.Property<int>("ItemsAtSameTime")
                        .HasColumnType("int");

                    b.Property<int>("ItemsPerYear")
                        .HasColumnType("int");

                    b.Property<int>("LoanPeriodInDays")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ReservationCost")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
