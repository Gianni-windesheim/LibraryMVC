// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoftwareDevelopment2.Data;

#nullable disable

namespace SoftwareDevelopment2.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230616172345_ReservationSeeding")]
    partial class ReservationSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bf1278c2-5f81-45e0-9376-76f79cec1e13",
                            Email = "Tony_Davis53@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "b75f7f42958908caa2f44c56299d2543538243b1",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0f2484da-ee7c-40ce-8303-7468765ba877",
                            TwoFactorEnabled = false,
                            UserName = "Tony_Davis53@hotmail.com"
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a784bba6-057c-4301-b171-aa0351694199",
                            Email = "Danny40@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "e1f8e2da6fd89e433622654288c17b5b0c9a45a2",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "23938475-9538-434f-8ca4-1a4870d25cd0",
                            TwoFactorEnabled = false,
                            UserName = "Danny40@hotmail.com"
                        },
                        new
                        {
                            Id = "3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "64689127-02d9-4d1b-a606-67c10951f331",
                            Email = "Horace24@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "4482c75c373c8d73407fe4284cfdebbbf02dbdae",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e3493a5c-aee0-4b0c-bd54-3c69add96e9d",
                            TwoFactorEnabled = false,
                            UserName = "Horace24@yahoo.com"
                        },
                        new
                        {
                            Id = "4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "adb744a4-f256-4e6d-a937-3eb1b5f456c1",
                            Email = "Amanda.Barton41@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "6a8e501caddda9bb9c298155621216a094cd7679",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e139645e-1431-4b02-a487-75f961ffb714",
                            TwoFactorEnabled = false,
                            UserName = "Amanda.Barton41@gmail.com"
                        },
                        new
                        {
                            Id = "5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8a141628-527f-47ac-93dc-fd2fd4ea3409",
                            Email = "Robert.Jenkins@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "d8c5e8dfb4955858f749992fd59bf95ced9013ba",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b23a696f-09b3-43b0-b0e6-d863452a6cd2",
                            TwoFactorEnabled = false,
                            UserName = "Robert.Jenkins@gmail.com"
                        },
                        new
                        {
                            Id = "6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5bbd1594-77a0-4a56-b538-4b6335834d21",
                            Email = "Bernadette87@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "65d632e6e151cdc930aa30d979d5f18d29e20b99",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "10578a2c-e1ba-40c1-a0ca-f0b2a7b32aed",
                            TwoFactorEnabled = false,
                            UserName = "Bernadette87@yahoo.com"
                        },
                        new
                        {
                            Id = "7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1176ba41-e47a-4f86-ac82-c0338fb7b449",
                            Email = "Kurt29@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "5df4157405eba5cae8ae74030e7dd96ea4e3ba80",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6edc2ee3-65f6-4410-bc56-f510abd9ff25",
                            TwoFactorEnabled = false,
                            UserName = "Kurt29@hotmail.com"
                        },
                        new
                        {
                            Id = "8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "387ac031-75bb-408c-b2be-523f5a2fedf5",
                            Email = "Jeremiah_Conroy@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "3c9d97ad5ec9bd0990acc4a978f9ac093bb8d3c8",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "43333c2c-fa21-4441-bfe4-895bdbfd5007",
                            TwoFactorEnabled = false,
                            UserName = "Jeremiah_Conroy@yahoo.com"
                        },
                        new
                        {
                            Id = "9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "86db1ccf-f886-4dbb-8df3-8a151a910147",
                            Email = "Domingo5@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "e8d32c13b08f8077fa5aa9dda2bdca15e3273fa0",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2d8ff71a-4ef6-4f5f-9700-fd8a94d8d27e",
                            TwoFactorEnabled = false,
                            UserName = "Domingo5@hotmail.com"
                        },
                        new
                        {
                            Id = "10",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c3fd6361-af0b-4ab0-8036-ff405ce03f45",
                            Email = "Blanca_Collins1@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "fb20f60e8624f0e6b3a01bfb84da4fd5ae2f1661",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e15035be-105c-4b87-ba0b-3d2936be93d4",
                            TwoFactorEnabled = false,
                            UserName = "Blanca_Collins1@hotmail.com"
                        },
                        new
                        {
                            Id = "11",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "604564f4-4b99-46a8-aaca-145ee1465e64",
                            Email = "Bertha_Hermiston71@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "ef9e03945a9dcf7e9114cce8470097843abfacf3",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fe4aa36e-bf39-4d75-8b40-3b41bd94c823",
                            TwoFactorEnabled = false,
                            UserName = "Bertha_Hermiston71@hotmail.com"
                        },
                        new
                        {
                            Id = "12",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "43f5e101-036e-49a3-b245-9fd93a19860b",
                            Email = "Desiree_Brakus@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "26e57c47b21b33b53afcbb76d61075b76a795fa1",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "55fd9807-b8f9-4d39-9efe-12d7c32e2f5a",
                            TwoFactorEnabled = false,
                            UserName = "Desiree_Brakus@hotmail.com"
                        },
                        new
                        {
                            Id = "13",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "aa0b83c6-58e5-49be-aa99-0a3338a12b9d",
                            Email = "Ruth.Senger36@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "524e46c4208fe0da4420d0f14246d33bfeb3de31",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9256d631-62b3-4a41-834d-9a8dc3024446",
                            TwoFactorEnabled = false,
                            UserName = "Ruth.Senger36@yahoo.com"
                        },
                        new
                        {
                            Id = "14",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f56a8b71-e70f-43ef-b121-5a15bf0ddf8f",
                            Email = "Eloise.Funk@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "2343821ad907109342a45ac0dbe1b993146590c8",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "40c0941f-9427-47c7-9c44-2edb0dd3510b",
                            TwoFactorEnabled = false,
                            UserName = "Eloise.Funk@gmail.com"
                        },
                        new
                        {
                            Id = "15",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "68760529-5c0f-4bf7-8bb7-071ccb103a33",
                            Email = "Nettie.Hermann@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "046427e1202616d6a02c6b544578e0ec6636b3dc",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d462ffe6-b1a1-4835-8087-71380d45d9e3",
                            TwoFactorEnabled = false,
                            UserName = "Nettie.Hermann@yahoo.com"
                        },
                        new
                        {
                            Id = "16",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "128aca33-2d7e-427e-b284-79fbd01a022e",
                            Email = "Deborah90@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "0cbe28fed0ed7e6ad41adf766fbacf19f612be54",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f3f43c9d-1cc0-4060-ad36-77301de02517",
                            TwoFactorEnabled = false,
                            UserName = "Deborah90@gmail.com"
                        },
                        new
                        {
                            Id = "17",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e79312cc-2d2c-4b1e-98c6-0c550b45e05f",
                            Email = "Andy43@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "33915f1145a39a4c3e91d55ddd22d74b63a12907",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0b3036e5-397f-482d-b0b9-0bc7d6450b2b",
                            TwoFactorEnabled = false,
                            UserName = "Andy43@gmail.com"
                        },
                        new
                        {
                            Id = "18",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "05eb9c52-3642-468d-a2a6-45248c056a2c",
                            Email = "Sara.Stamm62@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "c353a89bf03f5ed000370279d77431296f927e1e",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "efa0fe13-36eb-4807-8045-effa9994736d",
                            TwoFactorEnabled = false,
                            UserName = "Sara.Stamm62@hotmail.com"
                        },
                        new
                        {
                            Id = "19",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d92ce7e4-c037-4831-bf05-dfb729a79774",
                            Email = "Aaron.Kuphal@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "67f0b0bb7b499271fd93d4a65054e845d20176a5",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6f7e0a9f-67a9-4485-927a-95f8470a154a",
                            TwoFactorEnabled = false,
                            UserName = "Aaron.Kuphal@hotmail.com"
                        },
                        new
                        {
                            Id = "20",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6af8b126-d5bb-4c65-bf00-46d7efe9115e",
                            Email = "Roman.Spencer79@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "163ef2b8fed0f780c6096cfb2ed1ce329e9337f5",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3bd664df-212d-4ede-b568-d146b3a2a501",
                            TwoFactorEnabled = false,
                            UserName = "Roman.Spencer79@hotmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SoftwareDevelopment2.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 50,
                            Name = "Harold Sporer"
                        },
                        new
                        {
                            Id = 2,
                            Age = 50,
                            Name = "Lydia Lockman"
                        },
                        new
                        {
                            Id = 3,
                            Age = 50,
                            Name = "Abraham Pfeffer"
                        },
                        new
                        {
                            Id = 4,
                            Age = 50,
                            Name = "Kim Mertz"
                        },
                        new
                        {
                            Id = 5,
                            Age = 50,
                            Name = "Rodolfo Gislason"
                        },
                        new
                        {
                            Id = 6,
                            Age = 50,
                            Name = "Marianne Crona"
                        },
                        new
                        {
                            Id = 7,
                            Age = 50,
                            Name = "Noah Stiedemann"
                        },
                        new
                        {
                            Id = 8,
                            Age = 50,
                            Name = "Willis Padberg"
                        },
                        new
                        {
                            Id = 9,
                            Age = 50,
                            Name = "Blanche Beer"
                        },
                        new
                        {
                            Id = 10,
                            Age = 50,
                            Name = "Jack Gutmann"
                        },
                        new
                        {
                            Id = 11,
                            Age = 50,
                            Name = "Guadalupe Huel"
                        },
                        new
                        {
                            Id = 12,
                            Age = 50,
                            Name = "Kristina Renner"
                        },
                        new
                        {
                            Id = 13,
                            Age = 50,
                            Name = "Darnell Crist"
                        },
                        new
                        {
                            Id = 14,
                            Age = 50,
                            Name = "Cary Wyman"
                        },
                        new
                        {
                            Id = 15,
                            Age = 50,
                            Name = "Daniel Pacocha"
                        },
                        new
                        {
                            Id = 16,
                            Age = 50,
                            Name = "Tommie Lockman"
                        },
                        new
                        {
                            Id = 17,
                            Age = 50,
                            Name = "Roger Dicki"
                        },
                        new
                        {
                            Id = 18,
                            Age = 50,
                            Name = "Dianna Schroeder"
                        },
                        new
                        {
                            Id = 19,
                            Age = 50,
                            Name = "Darnell Rolfson"
                        },
                        new
                        {
                            Id = 20,
                            Age = 50,
                            Name = "Hilda Dooley"
                        });
                });

            modelBuilder.Entity("SoftwareDevelopment2.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearOfRelease")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            LocationId = 1,
                            Title = "Harry Potter: 1",
                            YearOfRelease = 1998
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            LocationId = 2,
                            Title = "Harry Potter: 2",
                            YearOfRelease = 1999
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            LocationId = 3,
                            Title = "Harry Potter: 3",
                            YearOfRelease = 2000
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            LocationId = 4,
                            Title = "Harry Potter: 4",
                            YearOfRelease = 2001
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 5,
                            LocationId = 5,
                            Title = "Harry Potter: 5",
                            YearOfRelease = 2002
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 6,
                            LocationId = 6,
                            Title = "Harry Potter: 6",
                            YearOfRelease = 2003
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 7,
                            LocationId = 7,
                            Title = "Harry Potter: 7",
                            YearOfRelease = 2004
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 8,
                            LocationId = 8,
                            Title = "Harry Potter: 8",
                            YearOfRelease = 2005
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 9,
                            LocationId = 9,
                            Title = "Harry Potter: 9",
                            YearOfRelease = 2006
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 10,
                            LocationId = 10,
                            Title = "Harry Potter: 10",
                            YearOfRelease = 2007
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 11,
                            LocationId = 11,
                            Title = "Harry Potter: 11",
                            YearOfRelease = 2008
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 12,
                            LocationId = 12,
                            Title = "Harry Potter: 12",
                            YearOfRelease = 2009
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 13,
                            LocationId = 13,
                            Title = "Harry Potter: 13",
                            YearOfRelease = 2010
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 14,
                            LocationId = 14,
                            Title = "Harry Potter: 14",
                            YearOfRelease = 2011
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 15,
                            LocationId = 15,
                            Title = "Harry Potter: 15",
                            YearOfRelease = 2012
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 16,
                            LocationId = 16,
                            Title = "Harry Potter: 16",
                            YearOfRelease = 2013
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 17,
                            LocationId = 17,
                            Title = "Harry Potter: 17",
                            YearOfRelease = 2014
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 18,
                            LocationId = 18,
                            Title = "Harry Potter: 18",
                            YearOfRelease = 2015
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 19,
                            LocationId = 19,
                            Title = "Harry Potter: 19",
                            YearOfRelease = 2016
                        });
                });

            modelBuilder.Entity("SoftwareDevelopment2.Models.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2023, 7, 7, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8257),
                            ItemId = 1,
                            StartDate = new DateTime(2023, 6, 16, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8196),
                            UserId = "1"
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2023, 7, 7, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8319),
                            ItemId = 2,
                            StartDate = new DateTime(2023, 6, 16, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8318),
                            UserId = "2"
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2023, 7, 7, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8344),
                            ItemId = 3,
                            StartDate = new DateTime(2023, 6, 16, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8343),
                            UserId = "3"
                        },
                        new
                        {
                            Id = 4,
                            EndDate = new DateTime(2023, 7, 7, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8368),
                            ItemId = 4,
                            StartDate = new DateTime(2023, 6, 16, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8366),
                            UserId = "4"
                        },
                        new
                        {
                            Id = 5,
                            EndDate = new DateTime(2023, 7, 7, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8434),
                            ItemId = 5,
                            StartDate = new DateTime(2023, 6, 16, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8432),
                            UserId = "5"
                        },
                        new
                        {
                            Id = 6,
                            EndDate = new DateTime(2023, 7, 7, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8461),
                            ItemId = 6,
                            StartDate = new DateTime(2023, 6, 16, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8460),
                            UserId = "6"
                        },
                        new
                        {
                            Id = 7,
                            EndDate = new DateTime(2023, 7, 7, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8486),
                            ItemId = 7,
                            StartDate = new DateTime(2023, 6, 16, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8484),
                            UserId = "7"
                        },
                        new
                        {
                            Id = 8,
                            EndDate = new DateTime(2023, 7, 7, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8594),
                            ItemId = 8,
                            StartDate = new DateTime(2023, 6, 16, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8592),
                            UserId = "8"
                        },
                        new
                        {
                            Id = 9,
                            EndDate = new DateTime(2023, 7, 7, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8623),
                            ItemId = 9,
                            StartDate = new DateTime(2023, 6, 16, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8621),
                            UserId = "9"
                        },
                        new
                        {
                            Id = 10,
                            EndDate = new DateTime(2023, 7, 7, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8648),
                            ItemId = 10,
                            StartDate = new DateTime(2023, 6, 16, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8646),
                            UserId = "0"
                        },
                        new
                        {
                            Id = 11,
                            EndDate = new DateTime(2023, 7, 7, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8670),
                            ItemId = 11,
                            StartDate = new DateTime(2023, 6, 16, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8669),
                            UserId = "1"
                        },
                        new
                        {
                            Id = 12,
                            EndDate = new DateTime(2023, 7, 7, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8693),
                            ItemId = 12,
                            StartDate = new DateTime(2023, 6, 16, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8692),
                            UserId = "2"
                        },
                        new
                        {
                            Id = 13,
                            EndDate = new DateTime(2023, 7, 7, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8715),
                            ItemId = 13,
                            StartDate = new DateTime(2023, 6, 16, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8714),
                            UserId = "3"
                        },
                        new
                        {
                            Id = 14,
                            EndDate = new DateTime(2023, 7, 7, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8781),
                            ItemId = 14,
                            StartDate = new DateTime(2023, 6, 16, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8780),
                            UserId = "4"
                        },
                        new
                        {
                            Id = 15,
                            EndDate = new DateTime(2023, 7, 7, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8888),
                            ItemId = 15,
                            StartDate = new DateTime(2023, 6, 16, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8886),
                            UserId = "5"
                        },
                        new
                        {
                            Id = 16,
                            EndDate = new DateTime(2023, 7, 7, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8945),
                            ItemId = 16,
                            StartDate = new DateTime(2023, 6, 16, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8929),
                            UserId = "6"
                        },
                        new
                        {
                            Id = 17,
                            EndDate = new DateTime(2023, 7, 7, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8999),
                            ItemId = 17,
                            StartDate = new DateTime(2023, 6, 16, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(8998),
                            UserId = "7"
                        },
                        new
                        {
                            Id = 18,
                            EndDate = new DateTime(2023, 7, 7, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(9025),
                            ItemId = 18,
                            StartDate = new DateTime(2023, 6, 16, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(9024),
                            UserId = "8"
                        },
                        new
                        {
                            Id = 19,
                            EndDate = new DateTime(2023, 7, 7, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(9049),
                            ItemId = 19,
                            StartDate = new DateTime(2023, 6, 16, 19, 23, 45, 422, DateTimeKind.Local).AddTicks(9048),
                            UserId = "9"
                        });
                });

            modelBuilder.Entity("SoftwareDevelopment2.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Verdieping 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Verdieping 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Verdieping 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Verdieping 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Verdieping 5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Verdieping 6"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Verdieping 7"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Verdieping 8"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Verdieping 9"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Verdieping 10"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Verdieping 11"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Verdieping 12"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Verdieping 13"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Verdieping 14"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Verdieping 15"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Verdieping 16"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Verdieping 17"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Verdieping 18"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Verdieping 19"
                        });
                });

            modelBuilder.Entity("SoftwareDevelopment2.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 1,
                            UserId = "1"
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 2,
                            UserId = "2"
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 3,
                            UserId = "3"
                        },
                        new
                        {
                            Id = 4,
                            ItemId = 4,
                            UserId = "4"
                        },
                        new
                        {
                            Id = 5,
                            ItemId = 5,
                            UserId = "5"
                        },
                        new
                        {
                            Id = 6,
                            ItemId = 6,
                            UserId = "6"
                        },
                        new
                        {
                            Id = 7,
                            ItemId = 7,
                            UserId = "7"
                        },
                        new
                        {
                            Id = 8,
                            ItemId = 8,
                            UserId = "8"
                        },
                        new
                        {
                            Id = 9,
                            ItemId = 9,
                            UserId = "9"
                        },
                        new
                        {
                            Id = 10,
                            ItemId = 10,
                            UserId = "0"
                        },
                        new
                        {
                            Id = 11,
                            ItemId = 11,
                            UserId = "1"
                        },
                        new
                        {
                            Id = 12,
                            ItemId = 12,
                            UserId = "2"
                        },
                        new
                        {
                            Id = 13,
                            ItemId = 13,
                            UserId = "3"
                        },
                        new
                        {
                            Id = 14,
                            ItemId = 14,
                            UserId = "4"
                        },
                        new
                        {
                            Id = 15,
                            ItemId = 15,
                            UserId = "5"
                        },
                        new
                        {
                            Id = 16,
                            ItemId = 16,
                            UserId = "6"
                        },
                        new
                        {
                            Id = 17,
                            ItemId = 17,
                            UserId = "7"
                        },
                        new
                        {
                            Id = 18,
                            ItemId = 18,
                            UserId = "8"
                        },
                        new
                        {
                            Id = 19,
                            ItemId = 19,
                            UserId = "9"
                        });
                });

            modelBuilder.Entity("SoftwareDevelopment2.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgeGroup")
                        .HasColumnType("int");

                    b.Property<float>("CostPerMonth")
                        .HasColumnType("real");

                    b.Property<int>("ExtendsInARow")
                        .HasColumnType("int");

                    b.Property<float>("FinePerItemPerDay")
                        .HasColumnType("real");

                    b.Property<int>("ItemsAtSameTime")
                        .HasColumnType("int");

                    b.Property<int>("ItemsPerYear")
                        .HasColumnType("int");

                    b.Property<int>("LoanPeriodInDays")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ReservationCost")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
